library(shiny)
library(shiny.semantic)
source("ui.R")
source("server.R")
shinyApp(ui, server)
# https://datatricks.co.uk/animated-d3-js-scatter-plot-in-r
# x, y is the top-left corner of the rect
# width: how much to go to the right
# height: how much to go to the bottom
install.packages("R6")
library(shiny)
library(shiny.semantic)
source("ui.R")
source("server.R")
shinyApp(ui, server)
# x, y is the top-left corner of the rect
# width: how much to go to the right
# height: how much to go to the bottom
install.packages("r2d3")
library(shiny)
library(shiny.semantic)
source("ui.R")
source("server.R")
shinyApp(ui, server)
# x, y is the top-left corner of the rect
# width: how much to go to the right
# height: how much to go to the bottom
library(shiny)
library(shiny.semantic)
source("ui.R")
source("server.R")
shinyApp(ui, server)
# x, y is the top-left corner of the rect
# width: how much to go to the right
# height: how much to go to the bottom
install.packages("shinyjs")
runApp()
remotes::install_github("timelyportfolio/katexR")
install.packages("remotes")
remotes::install_github("timelyportfolio/katexR")
ect
# width: how much to go to the right
# height: how much to go to the bottom
library(shiny)
library(shiny.semantic)
source("ui.R")
source("server.R")
shinyApp(ui, server)
# x, y is the top-left corner of the rect
# width: how much to go to the right
# height: how much to go to the bottom
runApp()
runApp()
?d3Output
library(shiny)
library(shiny.semantic)
source("ui.R")
source("server.R")
shinyApp(ui, server)
# x, y is the top-left corner of the rect
# width: how much to go to the right
# height: how much to go to the bottom
